1.
Angular apps are made of components

generate component by the command: ng generate component [component-name]

in the ts file of the component you will find @Component annotation

selector: is the name of the tag 'app-heroes' => tag to use component is <app-hero> or ingeneral <selector></selector>
templateUrl: is the relative position of html file of the component or in other words how the component would be display in html
styleUrl is the private css file of the component

you can add the property of the component by declaring 
hero = 'hero name';
or hero: Hero interface or string to declare property with the value type is Hero or string

display the property of the component in templateUrl by {{property}}

=> use it on the main app as the following tag <selector><selector/>

you can declare an interface by create a ts file with the following syntax

export key word will allow other component to import the interface

export interface interface_name {
  property:property_value_type;
  id:int;
  name:string;
}

import syntax is 
import { property_with_export_keyword } from 'relative_file_position_without)file_extension'

if property is an object you can get the property of an object through "." in templateUrl

{{object.id}} or {{hero.name}}

angular can two way bind data from input to property by [(ngModel)] 
ex: <input [(ngModel)]="hero.name">
however (ngModel) is not available by default =>
import {FormModule} from '@angular/form'; at appcomponent.ts

5. in-app navigation

ng generate module app-routing --flat --module=app
--flat puts the file in src/app instead of its own folder.
--module=app tells the CLI to register it in the imports array of the AppModule.

const routes is the list of routes for the app here you will declare which which route will use which component 
ex: 
in app.routing.module.ts you must import RouterModule and Router class from @'angular/router'
const routes: Routes = [
  {path: 'pathname', component:'Component_Name'}
]

@NgModule is a metadata that init the router and starts listen to change in browser
imports add RouterModule for the AppRouterModule and configure the route with RouterModule.root(routes) 'routes' comes from the above declaration
RouterModule call .root because we configuring the app at root level
exports:[RouterModule to use throughout the app]

To use the router add the <router-outlet></router-outlet> at app.component.html

To add navigation link for the app use <a routerLink="/pathname"></a>

now HeroDetailComponent must create a component in reponse to the url ~/detail/some_id => extract id from route
=>acquire the hero with that id from server through service

import {ActivatedRoute} helps takes information about the current route or info about the route of this specific component
in this specifically we want the id  of the hero to display

import {location} is an angular service to interact with the browser

route.snapshot holds the routes information of the component after it is created
paramMap create a dictionary of route parameter from the url

location.back basically use the back button of the browser
